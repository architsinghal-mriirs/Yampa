-- Copyright (c) 2003, Henrik Nilsson, Antony Courtney and Yale University.
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are met:
--
-- - Redistributions of source code must retain the above copyright notice,
-- this list of conditions and the following disclaimer.
--
-- - Redistributions in binary form must reproduce the above copyright notice,
-- this list of conditions and the following disclaimer in the documentation
-- and/or other materials provided with the distribution.
--
-- - Neither name of the copyright holders nor the names of its contributors
-- may be used to endorse or promote products derived from this software
-- without specific prior written permission.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND THE CONTRIBUTORS "AS
-- IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
-- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
-- PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR THE
-- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
-- OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
-- WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
-- OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
-- ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
cabal-version: >= 1.10
build-type: Simple
name: Yampa
version: 0.13.3
author: Henrik Nilsson, Antony Courtney
maintainer: Ivan Perez (ivan.perez@keera.co.uk)
homepage: https://github.com/ivanperez-keera/Yampa/
license: BSD3
license-file: LICENSE
category: Reactivity, FRP
synopsis: Elegant Functional Reactive Programming Language for Hybrid Systems
description:
  Domain-specific language embedded in Haskell for programming
  hybrid (mixed discrete-time and continuous-time) systems. Yampa is based on
  the concepts of Functional Reactive Programming (FRP) and is structured using
  arrow combinators.

extra-source-files:
  tests/Tests.hs,         tests/TestsCommon.hs,        tests/TestsArr.hs,
  tests/TestsComp.hs,     tests/TestsFirstSecond.hs,   tests/TestsLaws.hs,
  tests/TestsLoop.hs,     tests/TestsLoopLaws.hs,      tests/TestsBasicSF.hs,
  tests/TestsSscan.hs,    tests/TestsEvSrc.hs,         tests/TestsCOC.hs,
  tests/TestsSwitch.hs,   tests/TestsKSwitch.hs,       tests/TestsRSwitch.hs,
  tests/TestsPSwitch.hs,  tests/TestsRPSwitch.hs,      tests/TestsWFG.hs,
  tests/TestsAccum.hs,    tests/TestsPre.hs,           tests/TestsDelay.hs,
  tests/TestsDer.hs,      tests/TestsLoopPre.hs,       tests/TestsLoopIntegral.hs,
  tests/TestsReact.hs,    tests/TestsEmbed.hs,         tests/TestsUtils.hs,
  tests/TestsTask.hs,     tests/testYampaMain.hs,

  examples/Elevator/Elevator.hs,
  examples/Elevator/TestElevatorMain.hs,
  examples/TailgatingDetector/TailgatingDetector.hs,
  examples/TailgatingDetector/TestTGMain.hs,
  examples/Diagrams.hs,

  CHANGELOG

source-repository head
  type:     git
  location: git://github.com/ivanperez-keera/Yampa.git

-- You can disable the hlint test suite with -f-test-hlint
flag test-hlint
  Description: Enable hlint test suite
  default: False
  manual: True

-- You can disable the haddock coverage test suite with -f-test-doc-coverage
flag test-doc-coverage
  Description: Enable haddock coverage test suite
  default: False
  manual: True

-- You can disable the regression test suite with -f-test-regression
flag test-regression
  Description: Enable regression test suite
  default: True
  manual: True

flag examples
  Description: Enable examples
  default: False
  manual: True

-- WARNING: The following flag exposes Yampa's core. You should avoid using
-- this at all. The only reason to expose it is that we are using Yampa for
-- research, and many extensions require that we expose the constructors. No
-- released project should depend on this. In general, you should always
-- install Yampa with this flag disabled.
flag expose-core
  Description: You can enable exposing some of Yampa's core constructs
               using -fexpose-core.
               .
               Enabling this is an unsupported configuration, but it may be
               useful if you are building an extension of Yampa for research
               and do not wish to fork Yampa completely.
               .
               No released project should ever depend on this.
  default: False
  manual: True

library
  exposed-modules:
    FRP.Yampa
    FRP.Yampa.Arrow
    FRP.Yampa.Basic
    FRP.Yampa.Conditional
    FRP.Yampa.Delays
    FRP.Yampa.Event
    FRP.Yampa.EventS
    FRP.Yampa.Hybrid
    FRP.Yampa.Integration
    FRP.Yampa.Loop
    FRP.Yampa.Random
    FRP.Yampa.Scan
    FRP.Yampa.Simulation
    FRP.Yampa.Switches
    FRP.Yampa.Task
    FRP.Yampa.Time

  other-modules:
    -- Auxiliary (commonly used) types
    FRP.Yampa.Diagnostics

  build-Depends:
      base < 6
    , deepseq
    , random
    , simple-affine-space

  default-language:
    Haskell2010

  hs-source-dirs:  src

  ghc-options : -O3 -Wall -fno-warn-name-shadowing

  if !impl(ghc>=8.0)
    build-Depends: fail == 4.9.*

  if flag(expose-core)
    exposed-modules:
      FRP.Yampa.InternalCore
  else
    other-modules:
      FRP.Yampa.InternalCore

test-suite hlint
  type: exitcode-stdio-1.0
  main-is: hlint.hs
  default-language:
    Haskell2010
  hs-source-dirs: tests
  if !flag(test-hlint)
    buildable: False
  else
    build-depends:
      base,
      hlint >= 1.7

-- Verify that the code is thoroughly documented
test-suite haddock-coverage
  type: exitcode-stdio-1.0
  main-is: HaddockCoverage.hs
  default-language:
    Haskell2010
  hs-source-dirs: tests
  ghc-options: -Wall

  if !flag(test-doc-coverage)
    buildable: False
  else
    build-depends:
      base >= 4 && < 5,
      directory,
      filepath,
      process,
      regex-posix

test-suite regression
  type: exitcode-stdio-1.0
  main-is: testYampaMain.hs
  other-modules:
    Tests
    TestsAccum
    TestsArr
    TestsBasicSF
    TestsCOC
    TestsCommon
    TestsComp
    TestsDelay
    TestsDer
    TestsEmbed
    TestsEvSrc
    TestsFirstSecond
    TestsKSwitch
    TestsLaws
    TestsLoop
    TestsLoopIntegral
    TestsLoopLaws
    TestsLoopPre
    TestsPSwitch
    TestsPre
    TestsRPSwitch
    TestsRSwitch
    TestsReact
    TestsSscan
    TestsSwitch
    TestsTask
    TestsUtils
    TestsWFG

  default-language:
    Haskell2010

  hs-source-dirs: tests
  if !flag(test-regression)
    buildable: False
  else
    build-depends:
      base,
      Yampa

executable yampa-examples-sdl-bouncingbox
  main-is: MainBouncingBox.hs
  other-modules: YampaSDL
  default-language:
    Haskell2010
  hs-source-dirs:  examples/yampa-game/
  ghc-options : -O3 -Wall -fno-warn-name-shadowing
  if flag(examples)
    buildable: True
    build-Depends: base < 5, random, deepseq, SDL, Yampa
  else
    buildable: False

executable yampa-examples-sdl-circlingmouse
  main-is: MainCircleMouse.hs
  other-modules: YampaSDL
  default-language:
    Haskell2010
  hs-source-dirs:  examples/yampa-game/
  ghc-options : -O3 -Wall -fno-warn-name-shadowing
  if flag(examples)
    buildable: True
    build-Depends: base < 5, random, deepseq, SDL, Yampa
  else
    buildable: False

executable yampa-examples-sdl-wiimote
  main-is: MainWiimote.hs
  other-modules: YampaSDL
  default-language:
    Haskell2010
  hs-source-dirs:  examples/yampa-game/
  ghc-options : -O3 -Wall -fno-warn-name-shadowing -rtsopts
  if flag(examples)
    buildable: True
    build-depends: base < 5, random, deepseq, SDL, hcwiid, Yampa
  else
    buildable: False

executable yampa-examples-elevator
  main-is: TestElevatorMain.hs
  other-modules: Elevator
  default-language:
    Haskell2010
  hs-source-dirs:  examples/Elevator
  ghc-options : -O3 -Wall -fno-warn-name-shadowing
  if flag(examples)
    buildable: True
    build-depends: base < 5, Yampa
  else
    buildable: False

executable yampa-examples-tailgatingdetector
  main-is: TestTGMain.hs
  other-modules: TailgatingDetector
  hs-source-dirs:  examples/TailgatingDetector
  ghc-options : -O3 -Wall -fno-warn-name-shadowing
  if flag(examples)
    buildable: True
    build-depends: base < 5, Yampa
  else
    buildable: False

  default-language:
    Haskell2010
